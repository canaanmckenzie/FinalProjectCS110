<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_25) on Fri Dec 06 16:08:39 EST 2013 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>War</title>
<meta name="date" content="2013-12-06">
<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="War";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class War" class="title">Class War</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>War</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">War</span>
extends <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre>
<div class="block">War class represents the functionality needed to play the card game war</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#COMPUTER_WIN">COMPUTER_WIN</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private Card</code></td>
<td class="colLast"><code><strong><a href="War.html#computerCard">computerCard</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/ImageIcon.html?is-external=true" title="class or interface in javax.swing">ImageIcon</a></code></td>
<td class="colLast"><code><strong><a href="War.html#computerCardImage">computerCardImage</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="War.html#computerCardStack">computerCardStack</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#computerScore">computerScore</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#HALF_DECK">HALF_DECK</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><strong><a href="War.html#isEmpty">isEmpty</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#OUT_OF_CARDS">OUT_OF_CARDS</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#PLAYER_WIN">PLAYER_WIN</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private Card</code></td>
<td class="colLast"><code><strong><a href="War.html#playerCard">playerCard</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/ImageIcon.html?is-external=true" title="class or interface in javax.swing">ImageIcon</a></code></td>
<td class="colLast"><code><strong><a href="War.html#playerCardImage">playerCardImage</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="War.html#playerCardStack">playerCardStack</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#playerScore">playerScore</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#WAR">WAR</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private Deck2</code></td>
<td class="colLast"><code><strong><a href="War.html#warDeck">warDeck</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#warStackSize">warStackSize</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="War.html#winner">winner</a></strong></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="War.html#War()">War</a></strong>()</code>
<div class="block">constructor creates an array list of half a randomized deck of card objects</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="War.html#drawComputerCard()">drawComputerCard</a></strong>()</code>
<div class="block">drawComputerCard returns a card object from the top of the computer's stack
if the card stack is empty (out of cards) the boolean isEmpty is tripped</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="War.html#drawPlayerCard()">drawPlayerCard</a></strong>()</code>
<div class="block">drawPlayerCard returns a card object from the top of the player's stack
if the card stack is empty (out of cards) the boolean isEmpty is tripped</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="War.html#getComputerCard()">getComputerCard</a></strong>()</code>
<div class="block">getPlayerStackSize returns the integer amount of cards in the stack</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="War.html#getComputerStackSize()">getComputerStackSize</a></strong>()</code>
<div class="block">getComputerStackSize returns the integer amount of cards in the stack</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="War.html#getPlayerCard()">getPlayerCard</a></strong>()</code>
<div class="block">getPlayerCard returns the card object in the top of the stack, without removing it</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="War.html#getPlayerStack()">getPlayerStack</a></strong>()</code>
<div class="block">getPlayerStack returns the playerStack (26 cards)</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="War.html#getPlayerStackSize()">getPlayerStackSize</a></strong>()</code>
<div class="block">getPlayerstackSize returns the integer amount of cards in the stack</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="War.html#isEmpty()">isEmpty</a></strong>()</code>
<div class="block">get isEmpty returns the boolean indicating if there are cards or not in the stack</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="playerScore">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playerScore</h4>
<pre>private&nbsp;int playerScore</pre>
</li>
</ul>
<a name="computerScore">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computerScore</h4>
<pre>private&nbsp;int computerScore</pre>
</li>
</ul>
<a name="playerCard">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playerCard</h4>
<pre>private&nbsp;Card playerCard</pre>
</li>
</ul>
<a name="computerCard">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computerCard</h4>
<pre>private&nbsp;Card computerCard</pre>
</li>
</ul>
<a name="winner">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>winner</h4>
<pre>private&nbsp;int winner</pre>
</li>
</ul>
<a name="warStackSize">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>warStackSize</h4>
<pre>private&nbsp;int warStackSize</pre>
</li>
</ul>
<a name="HALF_DECK">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>HALF_DECK</h4>
<pre>private final&nbsp;int HALF_DECK</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="constant-values.html#War.HALF_DECK">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="COMPUTER_WIN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>COMPUTER_WIN</h4>
<pre>private final&nbsp;int COMPUTER_WIN</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="constant-values.html#War.COMPUTER_WIN">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="PLAYER_WIN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PLAYER_WIN</h4>
<pre>private final&nbsp;int PLAYER_WIN</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="constant-values.html#War.PLAYER_WIN">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="OUT_OF_CARDS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>OUT_OF_CARDS</h4>
<pre>private final&nbsp;int OUT_OF_CARDS</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="constant-values.html#War.OUT_OF_CARDS">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="WAR">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>WAR</h4>
<pre>private final&nbsp;int WAR</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="constant-values.html#War.WAR">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="playerCardStack">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playerCardStack</h4>
<pre>private&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; playerCardStack</pre>
</li>
</ul>
<a name="computerCardStack">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computerCardStack</h4>
<pre>private&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; computerCardStack</pre>
</li>
</ul>
<a name="playerCardImage">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playerCardImage</h4>
<pre>private&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/ImageIcon.html?is-external=true" title="class or interface in javax.swing">ImageIcon</a> playerCardImage</pre>
</li>
</ul>
<a name="computerCardImage">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computerCardImage</h4>
<pre>private&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/ImageIcon.html?is-external=true" title="class or interface in javax.swing">ImageIcon</a> computerCardImage</pre>
</li>
</ul>
<a name="warDeck">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>warDeck</h4>
<pre>private&nbsp;Deck2 warDeck</pre>
</li>
</ul>
<a name="isEmpty">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isEmpty</h4>
<pre>private&nbsp;boolean isEmpty</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="War()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>War</h4>
<pre>public&nbsp;War()</pre>
<div class="block">constructor creates an array list of half a randomized deck of card objects</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getPlayerStack()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerStack</h4>
<pre>public&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;&nbsp;getPlayerStack()</pre>
<div class="block">getPlayerStack returns the playerStack (26 cards)</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>26 card objects</dd></dl>
</li>
</ul>
<a name="drawPlayerCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>drawPlayerCard</h4>
<pre>public&nbsp;Card&nbsp;drawPlayerCard()</pre>
<div class="block">drawPlayerCard returns a card object from the top of the player's stack
if the card stack is empty (out of cards) the boolean isEmpty is tripped</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>null or the top card from the stack</dd></dl>
</li>
</ul>
<a name="drawComputerCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>drawComputerCard</h4>
<pre>public&nbsp;Card&nbsp;drawComputerCard()</pre>
<div class="block">drawComputerCard returns a card object from the top of the computer's stack
if the card stack is empty (out of cards) the boolean isEmpty is tripped</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>null or the top card from the stack</dd></dl>
</li>
</ul>
<a name="getPlayerStackSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerStackSize</h4>
<pre>public&nbsp;int&nbsp;getPlayerStackSize()</pre>
<div class="block">getPlayerstackSize returns the integer amount of cards in the stack</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>number of cards in the stack</dd></dl>
</li>
</ul>
<a name="getComputerStackSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getComputerStackSize</h4>
<pre>public&nbsp;int&nbsp;getComputerStackSize()</pre>
<div class="block">getComputerStackSize returns the integer amount of cards in the stack</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>number of cards in the stack</dd></dl>
</li>
</ul>
<a name="getPlayerCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerCard</h4>
<pre>public&nbsp;Card&nbsp;getPlayerCard()</pre>
<div class="block">getPlayerCard returns the card object in the top of the stack, without removing it</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>card object</dd></dl>
</li>
</ul>
<a name="getComputerCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getComputerCard</h4>
<pre>public&nbsp;Card&nbsp;getComputerCard()</pre>
<div class="block">getPlayerStackSize returns the integer amount of cards in the stack</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>card object</dd></dl>
</li>
</ul>
<a name="isEmpty()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isEmpty</h4>
<pre>public&nbsp;boolean&nbsp;isEmpty()</pre>
<div class="block">get isEmpty returns the boolean indicating if there are cards or not in the stack</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>if there are cards or not in either stack</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</body>
</html>
